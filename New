public class Birthday extends PersonalInfo {

    private int day;
    private int month;
    private int year;

    public int getDay() {
        return day;
    }

    public void setDay(int day) {
        if (month==1 || month==3) {
            if (day > 0 && day < 31) {
                this.day = day;
            }
        } else if (month==2) {
            if (day > 0 && day < 28) {
                this.day = day;
            }
        }
    }

    public int getMonth() {
        return month;
    }

    public void setMonth(int month) {
        this.month = month;
    }

    public int getYear() {
        return year;
    }

    public void setYear(int year) {
        this.year = year;
    }

    @Override
    public String getPersonInfoAsString() {
        return getDay() + "/" + getMonth() + "/" + getYear();
    }
}

public abstract class Contact {
    public abstract String getContactAsString();
}

public class Education extends PersonalInfo {
    //TODO Homework

    private String educationSpeciality; //medical
    private String universityName;

    public String getEducationSpeciality() {
        return educationSpeciality;
    }

    public void setEducationSpeciality(String educationSpeciality) {
        this.educationSpeciality = educationSpeciality;
    }

    public String getUniversityName() {
        return universityName;
    }

    public void setUniversityName(String universityName) {
        this.universityName = universityName;
    }
    @Override
    public String getPersonInfoAsString(){
        return getUniversityName() + ", " + getEducationSpeciality();
    }
}

public class Email extends Contact {

    private String username; //maxim.semenov
    private String mailProvider; //gmail.com

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getMailProvider() {
        return mailProvider;
    }

    public void setMailProvider(String mailProvider) {
        this.mailProvider = mailProvider;
    }

    @Override
    public String getContactAsString() {
        return getUsername() + "@" + getMailProvider();
    }
}

public class FacebookAccount extends Contact {

    private String username;

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @Override
    public String getContactAsString() {
        return getUsername();
    }
}

public class Gender extends PersonalInfo {

    private String type; //w, m

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    @Override
    public String getPersonInfoAsString(){
        return getType();
    }
}

public class InstagramAccount extends Contact {
    private String username;

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }
    @Override
    public String getContactAsString() {
        return getUsername();
    }
}

public class MobilePhone extends Contact {

    private String countryCode; //+7, +0, +1...
    private String msisdn; //7015657645

    public String getCountryCode() {
        return countryCode;
    }

    public void setCountryCode(String countryCode) {
        this.countryCode = countryCode;
    }

    public String getMsisdn() {
        return msisdn;
    }

    public void setMsisdn(String msisdn) {
        this.msisdn = msisdn;
    }

    @Override
    public String getContactAsString() {
        return getCountryCode() + " " + getMsisdn();
    }
}

public class Name extends PersonalInfo {

    private String firstname;
    private String surname;
    private String paternal;
    private String maternal;
    private String prefix; //Mr, Mrs, Bey, Aga, Professor

    public String getFirstname() {
        return firstname;
    }

    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    public String getSurname() {
        return surname;
    }

    public void setSurname(String surname) {
        this.surname = surname;
    }

    public String getPaternal() {
        return paternal;
    }

    public void setPaternal(String paternal) {
        this.paternal = paternal;
    }

    public String getMaternal() {
        return maternal;
    }

    public void setMaternal(String maternal) {
        this.maternal = maternal;
    }

    public String getPrefix() {
        return prefix;
    }

    public void setPrefix(String prefix) {
        this.prefix = prefix;
    }

    @Override
    public String getPersonInfoAsString(){
        return getFirstname()+" "+getSurname()+" "+getPaternal()+" "+getMaternal()+" "+getPrefix();
    }
}

public class Page {

    private int pageNumber;
    private Person person;

    public Page(Person person) {
        this.person = person;
    }

    public int getPageNumber() {
        return pageNumber;
    }

    public void setPageNumber(int pageNumber) {
        this.pageNumber = pageNumber;
    }

    public Person getPerson() {
        return person;
    }

    public void setPerson(Person person) {
        this.person = person;
    }
}

public class Person {

    private PersonalInfo[] personalInfos = new PersonalInfo[10];
    private int lastFreeCellInPersonalInfos = 0;

    private Contact[] contacts = new Contact[10];
    private int lastFreeCellInContacts = 0;

    public PersonalInfo[] getPersonalInfos() {
        return personalInfos;
    }

    public void setPersonalInfos(PersonalInfo[] personalInfos) {
        this.personalInfos = personalInfos;
    }

    public Contact[] getContacts() {
        return contacts;
    }

    public void setContacts(Contact[] contacts) {
        this.contacts = contacts;
    }

    public void addContact(Contact contact){
        this.contacts[lastFreeCellInContacts]=contact;
        lastFreeCellInContacts++;
    }
    public void addPersonalInfo(PersonalInfo personalInfo){
        this.personalInfos[lastFreeCellInPersonalInfos]=personalInfo;
        lastFreeCellInPersonalInfos++;
    }
}

public abstract class PersonalInfo {
    public abstract String getPersonInfoAsString();
}

public class Profession extends PersonalInfo {

    private String professionGroup; //medical
    private String professionName; //dentist

    public String getProfessionGroup() {
        return professionGroup;
    }

    public void setProfessionGroup(String professionGroup) {
        this.professionGroup = professionGroup;
    }

    public String getProfessionName() {
        return professionName;
    }

    public void setProfessionName(String professionName) {
        this.professionName = professionName;
    }
    @Override
    public String getPersonInfoAsString(){
        return getProfessionGroup() + ", " + getProfessionName();
    }

}

public class TelBook {

    private String owner;
    private Page[] pages = new Page[10];
    private int lastEmptyPageIndex = 0;

    public void add(Page page) {
        page.setPageNumber(lastEmptyPageIndex);
        pages[lastEmptyPageIndex] = page;
        lastEmptyPageIndex++;
    }
    public void delete(int delIndex){
        for(int i=delIndex;i<getLastEmptyPageIndex();i++){
            pages[i]=pages[i+1];
        }
        pages[lastEmptyPageIndex]=null;
        lastEmptyPageIndex--;
    }

    public void update(Page page){
        pages

    }

    public String getOwner() {
        return owner;
    }

    public void setOwner(String owner) {
        this.owner = owner;
    }

    public Page[] getPages() {
        return pages;
    }

    public void setPages(Page[] pages) {
        this.pages = pages;
    }

    public int getLastEmptyPageIndex() {
        return lastEmptyPageIndex;
    }

    public void setLastEmptyPageIndex(int lastEmptyPageIndex) {
        this.lastEmptyPageIndex = lastEmptyPageIndex;
    }
}

import java.util.Scanner;

public class TelephoneBookApplication {

    public static void main(String[] args) {

        System.out.println("Hello this is my phonebook");

        Scanner scanner = new Scanner(System.in);

        TelBook telBook = new TelBook();

        while (true) {

            System.out.println("Menu: ");
            System.out.println("1 - Add page;");
            System.out.println("2 - Delete page;");
            System.out.println("3 - Show all pages;");
            System.out.println("4 - Update page;");
            System.out.println("5 - Delete page;");

            System.out.println("Enter option: ");
            int optionSelected = scanner.nextInt();

            if (optionSelected == 1) {

                Person person = new Person();

                while (true) {

                    System.out.println("Select info to fill: ");
                    System.out.println("(name) Fill name");
                    System.out.println("(gender) Fill gender");
                    System.out.println("(birthday) Fill birthday");
                    System.out.println("(education) Fill education");
                    System.out.println("(profession) Fill profession");
                    System.out.println("(tel) Fill mobile phone");
                    System.out.println("(twitter) Fill twitter account");
                    System.out.println("(instagram) Fill instagram account");
                    System.out.println("(facebook) Fill facebook account");
                    System.out.println("(insta) Fill instagram account");
                    System.out.println("(email) Fill email address");
                    System.out.println("(done) Exit this menu");


                    String infoType = scanner.next();

                    if (infoType.equals("tel")) {

                        MobilePhone mobilePhone = new MobilePhone();

                        System.out.println("-Mobile phone-");
                        System.out.println("country code:");
                        mobilePhone.setCountryCode(scanner.next());
                        System.out.println("msisdn:");
                        mobilePhone.setMsisdn(scanner.next());

                        person.addContact(mobilePhone);

                    } else if (infoType.equals("name")) {

                        Name name = new Name();

                        System.out.println("-Name-");
                        System.out.println("firstname:");
                        name.setFirstname(scanner.next());
                        System.out.println("surname:");
                        name.setSurname(scanner.next());
                        System.out.println("paternalname:");
                        name.setPaternal(scanner.next());
                        System.out.println("maternalname:");
                        name.setMaternal(scanner.next());
                        System.out.println("prefix:");
                        name.setPrefix(scanner.next());

                        person.addPersonalInfo(name);

                    } else if (infoType.equals("birthday")) {

                        Birthday birthday = new Birthday();

                        System.out.println("-Birthday-");
                        System.out.println("day:");
                        birthday.setDay(scanner.nextInt());
                        System.out.println("month:");
                        birthday.setMonth(scanner.nextInt());
                        System.out.println("year:");
                        birthday.setYear(scanner.nextInt());

                        person.addPersonalInfo(birthday);

                    } else if (infoType.equals("twitter")) {

                        TwitterAccount twitter = new TwitterAccount();

                        System.out.println("-Twitter-");
                        System.out.println("username:");
                        twitter.setUsername(scanner.next());

                        person.addContact(twitter);

                    } else if (infoType.equals("facebook")) {
                        FacebookAccount facebook = new FacebookAccount();

                        System.out.println("-Facebook-");
                        System.out.println("username:");
                        facebook.setUsername(scanner.next());

                        person.addContact(facebook);
                    } else if (infoType.equals("instagram")) {
                        InstagramAccount instagram = new InstagramAccount();

                        System.out.println("-Instagram-");
                        System.out.println("username:");
                        instagram.setUsername(scanner.next());

                        person.addContact(instagram);
                    } else if (infoType.equals("email")) {
                        Email email = new Email();

                        System.out.println("-Email-");
                        System.out.println("username:");
                        email.setUsername(scanner.next());
                        System.out.println("email provider:");
                        email.setMailProvider(scanner.next());

                        person.addContact(email);
                    }else if (infoType.equals("education")) {
                        Education education = new Education();

                        System.out.println("-Education-");
                        System.out.println("EducationSpeciality:");
                        education.setEducationSpeciality(scanner.next());
                        System.out.println("University Name:");
                        education.setUniversityName(scanner.next());

                        person.addPersonalInfo(education);
                    }else if (infoType.equals("gender")) {
                        Gender gender = new Gender();

                        System.out.println("-Gender-");
                        System.out.println("type:");
                        gender.setType(scanner.next());

                        person.addPersonalInfo(gender);
                    }else if (infoType.equals("profession")) {
                        Profession profession = new Profession();

                        System.out.println("-Profession-");
                        System.out.println("profession group:");
                        profession.setProfessionGroup(scanner.next());
                        System.out.println("profession name:");
                        profession.setProfessionName(scanner.next());

                        person.addPersonalInfo(profession);
                    } else if (infoType.equals("done")) {
                        break;
                    }
                }

                Page page = new Page(person);

                telBook.add(page);

            }
            else if (optionSelected == 3) {

                int i = 0;

                Page[] pages = telBook.getPages();

                while (i < telBook.getLastEmptyPageIndex()) {

                    Person person = pages[i].getPerson();

                    System.out.println("TelBook current page number#: " + pages[i].getPageNumber());

                    for (int j = 0; j < person.getContacts().length; j++) {
                        System.out.println(person.getContacts()[j].getContactAsString());
                    }

                    for (int j = 0; j < person.getPersonalInfos().length; j++) {
                        System.out.println(person.getPersonalInfos()[j].getPersonInfoAsString());
                    }

                    i++;
                }

            } else if (optionSelected == 4) {
                //TODO Homework Update Page
                //...
                int page= telBook.getLastEmptyPageIndex();

                telBook.update(page);

            } else if (optionSelected == 5) {
                System.out.println("Enter index of Page for delete");
                int pageIndex = Integer.parseInt(scanner.next());

                if(pageIndex<=telBook.getLastEmptyPageIndex()){
                    telBook.delete(pageIndex);
                }
            }
        }

    }

}

public class TwitterAccount extends Contact {

    private String username;

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }
    @Override
    public String getContactAsString() {
        return getUsername();
    }
}
